PopularityCalcJob {

  input {
    topic: "user-behaviour-topic"
  }

  output {
    topic1: "popularity-topic"
    topic2: "accm-popularity-topic"
    topic3: "device-topic"
  }

  spark {
    "spark.master": "local[2]"
    "spark.app.name": "example-spark-kafka"
    "spark.serializer": "org.apache.spark.serializer.KryoSerializer"
    "spark.kryo.registrator": "example.WordCountKryoRegistration"
  }

  streamingBatchDuration: 5s
  streamingCheckpointDir: "popularity-data-checkpoint"

  kafkaSource {
    // kafka brokers
    "bootstrap.servers": "192.168.99.100:9092"
    // start from the latest messages (at most once)
    "auto.offset.reset": "largest"
  }

  kafkaSink {
    // kafka bootstrap
    "bootstrap.servers": "192.168.99.100:9092"
    // ack from all in-sync replicas
    "acks": "all"
    // reduce buffer size from default 32M to 8M
    "buffer.memory": "8388608"
    // block if buffer is full
    "block.on.buffer.full": "true"
    // retry forever
    "retries": "2147483647"
    "retry.backoff.ms": "1500"
  }
}